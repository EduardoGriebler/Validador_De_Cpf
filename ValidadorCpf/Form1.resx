<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>